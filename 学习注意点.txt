知识点欠缺
	深刻教训  找了两个小时 难受了一晚上 
  抽象类不能继承 monobehavior 继承了 new对象的时候就会为空 不报错 但是能访问对象的方法   这是在写FSM时犯的错 太抽象了
ai解释：
    抽象基类是不能直接继承MonoBehaviour的，因为MonoBehaviour需要能够被实例化为游戏对象的组件，而抽象类不能被实例化。如果你试图让一个抽象类继承MonoBehaviour，编译器会报错。
  不过，你可以创建一个非抽象的基类继承自MonoBehaviour，然后让其他抽象类或具体类继承这个非抽象的基类。这样，你就可以在基类中定义一些通用的逻辑，并在继承的抽象类或具体类中进一步细化这些逻辑。

角色移动：
	是根据摄像机的y轴进行旋转的 就是角色会一直往前移动 方向是根据相机来决定的 牵扯数学公式 位置在玩家run状态中

手动重力：
	利用CharacterController 的Move（）方法进行模拟重力  
	gravity=-9.8f
        characterController.Move(new Vector3(0,gravity * Time.deltaTime, 0));
攻击检测：
	在进行攻击检测的时候  使用trigger 来判断是否攻击到敌人 判断的是 在挥刀的时候开启目标选择器 回到结束关闭目标选择器 这样可以更精准的判断攻击的敌人 开始和关闭用动画帧事件回调就可以
 
攻击动画处理 ：
	目前只处理了anbi的第一段攻击动画 之后动画按照这个为基准进行处理动画事件就行 判定是否受击通过接口 IHurt 来判断的
寻找最近的敌人 ：
	 这里用的是进行标签查找 找到所有敌人 判断最近距离